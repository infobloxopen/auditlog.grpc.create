// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/Infoblox-CTO/ngp.app.audit.logging/pkg/pb/auditlog.proto

package pb

import (
	context "context"
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	query "github.com/infobloxopen/atlas-app-toolkit/query"
	_ "github.com/infobloxopen/protoc-gen-atlas-query-validate/options"
	_ "github.com/infobloxopen/protoc-gen-gorm/options"
	types "github.com/infobloxopen/protoc-gen-gorm/types"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SubjectType int32

const (
	SubjectType_Default SubjectType = 0
	SubjectType_User    SubjectType = 1
	SubjectType_Service SubjectType = 2
	SubjectType_Device  SubjectType = 3
)

var SubjectType_name = map[int32]string{
	0: "Default",
	1: "User",
	2: "Service",
	3: "Device",
}

var SubjectType_value = map[string]int32{
	"Default": 0,
	"User":    1,
	"Service": 2,
	"Device":  3,
}

func (x SubjectType) String() string {
	return proto.EnumName(SubjectType_name, int32(x))
}

func (SubjectType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_046e6bf9c16e0523, []int{0}
}

type AuditLog struct {
	Id                   uint64               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Action               string               `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
	Result               string               `protobuf:"bytes,4,opt,name=result,proto3" json:"result,omitempty"`
	AppId                string               `protobuf:"bytes,5,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	ResourceId           string               `protobuf:"bytes,6,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	ResourceType         string               `protobuf:"bytes,7,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	UserName             string               `protobuf:"bytes,8,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	ClientIp             string               `protobuf:"bytes,9,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`
	ResourceDesc         string               `protobuf:"bytes,10,opt,name=resource_desc,json=resourceDesc,proto3" json:"resource_desc,omitempty"`
	Message              string               `protobuf:"bytes,11,opt,name=message,proto3" json:"message,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	RequestId            string               `protobuf:"bytes,13,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	EventVersion         string               `protobuf:"bytes,14,opt,name=event_version,json=eventVersion,proto3" json:"event_version,omitempty"`
	EventMetadata        *types.JSONValue     `protobuf:"bytes,15,opt,name=event_metadata,json=eventMetadata,proto3" json:"event_metadata,omitempty"`
	SubjectType          SubjectType          `protobuf:"varint,16,opt,name=subject_type,json=subjectType,proto3,enum=service.SubjectType" json:"subject_type,omitempty"`
	SessionType          string               `protobuf:"bytes,17,opt,name=session_type,json=sessionType,proto3" json:"session_type,omitempty"`
	SubjectGroups        []string             `protobuf:"bytes,18,rep,name=subject_groups,json=subjectGroups,proto3" json:"subject_groups,omitempty"`
	SessionId            string               `protobuf:"bytes,19,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	HttpUrl              string               `protobuf:"bytes,20,opt,name=http_url,json=httpUrl,proto3" json:"http_url,omitempty"`
	HttpMethod           string               `protobuf:"bytes,21,opt,name=http_method,json=httpMethod,proto3" json:"http_method,omitempty"`
	HttpReqBody          string               `protobuf:"bytes,22,opt,name=http_req_body,json=httpReqBody,proto3" json:"http_req_body,omitempty"`
	HttpCode             int32                `protobuf:"varint,23,opt,name=http_code,json=httpCode,proto3" json:"http_code,omitempty"`
	HttpRespBody         string               `protobuf:"bytes,24,opt,name=http_resp_body,json=httpRespBody,proto3" json:"http_resp_body,omitempty"`
	AccountId            string               `protobuf:"bytes,25,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *AuditLog) Reset()         { *m = AuditLog{} }
func (m *AuditLog) String() string { return proto.CompactTextString(m) }
func (*AuditLog) ProtoMessage()    {}
func (*AuditLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_046e6bf9c16e0523, []int{0}
}

func (m *AuditLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuditLog.Unmarshal(m, b)
}
func (m *AuditLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuditLog.Marshal(b, m, deterministic)
}
func (m *AuditLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuditLog.Merge(m, src)
}
func (m *AuditLog) XXX_Size() int {
	return xxx_messageInfo_AuditLog.Size(m)
}
func (m *AuditLog) XXX_DiscardUnknown() {
	xxx_messageInfo_AuditLog.DiscardUnknown(m)
}

var xxx_messageInfo_AuditLog proto.InternalMessageInfo

func (m *AuditLog) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *AuditLog) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *AuditLog) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *AuditLog) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func (m *AuditLog) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *AuditLog) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func (m *AuditLog) GetResourceType() string {
	if m != nil {
		return m.ResourceType
	}
	return ""
}

func (m *AuditLog) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *AuditLog) GetClientIp() string {
	if m != nil {
		return m.ClientIp
	}
	return ""
}

func (m *AuditLog) GetResourceDesc() string {
	if m != nil {
		return m.ResourceDesc
	}
	return ""
}

func (m *AuditLog) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *AuditLog) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *AuditLog) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *AuditLog) GetEventVersion() string {
	if m != nil {
		return m.EventVersion
	}
	return ""
}

func (m *AuditLog) GetEventMetadata() *types.JSONValue {
	if m != nil {
		return m.EventMetadata
	}
	return nil
}

func (m *AuditLog) GetSubjectType() SubjectType {
	if m != nil {
		return m.SubjectType
	}
	return SubjectType_Default
}

func (m *AuditLog) GetSessionType() string {
	if m != nil {
		return m.SessionType
	}
	return ""
}

func (m *AuditLog) GetSubjectGroups() []string {
	if m != nil {
		return m.SubjectGroups
	}
	return nil
}

func (m *AuditLog) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *AuditLog) GetHttpUrl() string {
	if m != nil {
		return m.HttpUrl
	}
	return ""
}

func (m *AuditLog) GetHttpMethod() string {
	if m != nil {
		return m.HttpMethod
	}
	return ""
}

func (m *AuditLog) GetHttpReqBody() string {
	if m != nil {
		return m.HttpReqBody
	}
	return ""
}

func (m *AuditLog) GetHttpCode() int32 {
	if m != nil {
		return m.HttpCode
	}
	return 0
}

func (m *AuditLog) GetHttpRespBody() string {
	if m != nil {
		return m.HttpRespBody
	}
	return ""
}

func (m *AuditLog) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

type AuditLogRes struct {
	Id                   uint64               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Action               string               `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
	Result               string               `protobuf:"bytes,4,opt,name=result,proto3" json:"result,omitempty"`
	AppId                string               `protobuf:"bytes,5,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	ResourceId           string               `protobuf:"bytes,6,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	ResourceType         string               `protobuf:"bytes,7,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	UserName             string               `protobuf:"bytes,8,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	ClientIp             string               `protobuf:"bytes,9,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`
	ResourceDesc         string               `protobuf:"bytes,10,opt,name=resource_desc,json=resourceDesc,proto3" json:"resource_desc,omitempty"`
	Message              string               `protobuf:"bytes,11,opt,name=message,proto3" json:"message,omitempty"`
	RequestId            string               `protobuf:"bytes,12,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	EventVersion         string               `protobuf:"bytes,13,opt,name=event_version,json=eventVersion,proto3" json:"event_version,omitempty"`
	EventMetadata        *types.JSONValue     `protobuf:"bytes,14,opt,name=event_metadata,json=eventMetadata,proto3" json:"event_metadata,omitempty"`
	SubjectType          SubjectType          `protobuf:"varint,15,opt,name=subject_type,json=subjectType,proto3,enum=service.SubjectType" json:"subject_type,omitempty"`
	SessionType          string               `protobuf:"bytes,16,opt,name=session_type,json=sessionType,proto3" json:"session_type,omitempty"`
	SubjectGroups        []string             `protobuf:"bytes,17,rep,name=subject_groups,json=subjectGroups,proto3" json:"subject_groups,omitempty"`
	SessionId            string               `protobuf:"bytes,18,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	HttpUrl              string               `protobuf:"bytes,19,opt,name=http_url,json=httpUrl,proto3" json:"http_url,omitempty"`
	HttpMethod           string               `protobuf:"bytes,20,opt,name=http_method,json=httpMethod,proto3" json:"http_method,omitempty"`
	HttpReqBody          string               `protobuf:"bytes,21,opt,name=http_req_body,json=httpReqBody,proto3" json:"http_req_body,omitempty"`
	HttpCode             int32                `protobuf:"varint,22,opt,name=http_code,json=httpCode,proto3" json:"http_code,omitempty"`
	HttpRespBody         string               `protobuf:"bytes,23,opt,name=http_resp_body,json=httpRespBody,proto3" json:"http_resp_body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *AuditLogRes) Reset()         { *m = AuditLogRes{} }
func (m *AuditLogRes) String() string { return proto.CompactTextString(m) }
func (*AuditLogRes) ProtoMessage()    {}
func (*AuditLogRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_046e6bf9c16e0523, []int{1}
}

func (m *AuditLogRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuditLogRes.Unmarshal(m, b)
}
func (m *AuditLogRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuditLogRes.Marshal(b, m, deterministic)
}
func (m *AuditLogRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuditLogRes.Merge(m, src)
}
func (m *AuditLogRes) XXX_Size() int {
	return xxx_messageInfo_AuditLogRes.Size(m)
}
func (m *AuditLogRes) XXX_DiscardUnknown() {
	xxx_messageInfo_AuditLogRes.DiscardUnknown(m)
}

var xxx_messageInfo_AuditLogRes proto.InternalMessageInfo

func (m *AuditLogRes) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *AuditLogRes) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *AuditLogRes) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *AuditLogRes) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func (m *AuditLogRes) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *AuditLogRes) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func (m *AuditLogRes) GetResourceType() string {
	if m != nil {
		return m.ResourceType
	}
	return ""
}

func (m *AuditLogRes) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *AuditLogRes) GetClientIp() string {
	if m != nil {
		return m.ClientIp
	}
	return ""
}

func (m *AuditLogRes) GetResourceDesc() string {
	if m != nil {
		return m.ResourceDesc
	}
	return ""
}

func (m *AuditLogRes) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *AuditLogRes) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *AuditLogRes) GetEventVersion() string {
	if m != nil {
		return m.EventVersion
	}
	return ""
}

func (m *AuditLogRes) GetEventMetadata() *types.JSONValue {
	if m != nil {
		return m.EventMetadata
	}
	return nil
}

func (m *AuditLogRes) GetSubjectType() SubjectType {
	if m != nil {
		return m.SubjectType
	}
	return SubjectType_Default
}

func (m *AuditLogRes) GetSessionType() string {
	if m != nil {
		return m.SessionType
	}
	return ""
}

func (m *AuditLogRes) GetSubjectGroups() []string {
	if m != nil {
		return m.SubjectGroups
	}
	return nil
}

func (m *AuditLogRes) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *AuditLogRes) GetHttpUrl() string {
	if m != nil {
		return m.HttpUrl
	}
	return ""
}

func (m *AuditLogRes) GetHttpMethod() string {
	if m != nil {
		return m.HttpMethod
	}
	return ""
}

func (m *AuditLogRes) GetHttpReqBody() string {
	if m != nil {
		return m.HttpReqBody
	}
	return ""
}

func (m *AuditLogRes) GetHttpCode() int32 {
	if m != nil {
		return m.HttpCode
	}
	return 0
}

func (m *AuditLogRes) GetHttpRespBody() string {
	if m != nil {
		return m.HttpRespBody
	}
	return ""
}

type GetRequest struct {
	Filter               *query.Filtering      `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	OrderBy              *query.Sorting        `protobuf:"bytes,2,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	Fields               *query.FieldSelection `protobuf:"bytes,3,opt,name=fields,proto3" json:"fields,omitempty"`
	Paging               *query.Pagination     `protobuf:"bytes,4,opt,name=paging,proto3" json:"paging,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_046e6bf9c16e0523, []int{2}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetFilter() *query.Filtering {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *GetRequest) GetOrderBy() *query.Sorting {
	if m != nil {
		return m.OrderBy
	}
	return nil
}

func (m *GetRequest) GetFields() *query.FieldSelection {
	if m != nil {
		return m.Fields
	}
	return nil
}

func (m *GetRequest) GetPaging() *query.Pagination {
	if m != nil {
		return m.Paging
	}
	return nil
}

type DownloadRequest struct {
	Filter               *query.Filtering      `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	OrderBy              *query.Sorting        `protobuf:"bytes,2,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	Fields               *query.FieldSelection `protobuf:"bytes,3,opt,name=fields,proto3" json:"fields,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *DownloadRequest) Reset()         { *m = DownloadRequest{} }
func (m *DownloadRequest) String() string { return proto.CompactTextString(m) }
func (*DownloadRequest) ProtoMessage()    {}
func (*DownloadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_046e6bf9c16e0523, []int{3}
}

func (m *DownloadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownloadRequest.Unmarshal(m, b)
}
func (m *DownloadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownloadRequest.Marshal(b, m, deterministic)
}
func (m *DownloadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownloadRequest.Merge(m, src)
}
func (m *DownloadRequest) XXX_Size() int {
	return xxx_messageInfo_DownloadRequest.Size(m)
}
func (m *DownloadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DownloadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DownloadRequest proto.InternalMessageInfo

func (m *DownloadRequest) GetFilter() *query.Filtering {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *DownloadRequest) GetOrderBy() *query.Sorting {
	if m != nil {
		return m.OrderBy
	}
	return nil
}

func (m *DownloadRequest) GetFields() *query.FieldSelection {
	if m != nil {
		return m.Fields
	}
	return nil
}

type CreateRequest struct {
	Payload              *AuditLog `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreateRequest) Reset()         { *m = CreateRequest{} }
func (m *CreateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()    {}
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_046e6bf9c16e0523, []int{4}
}

func (m *CreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest.Unmarshal(m, b)
}
func (m *CreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest.Marshal(b, m, deterministic)
}
func (m *CreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest.Merge(m, src)
}
func (m *CreateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRequest.Size(m)
}
func (m *CreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest proto.InternalMessageInfo

func (m *CreateRequest) GetPayload() *AuditLog {
	if m != nil {
		return m.Payload
	}
	return nil
}

type ListResponse struct {
	Results              []*AuditLogRes  `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Page                 *query.PageInfo `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListResponse) Reset()         { *m = ListResponse{} }
func (m *ListResponse) String() string { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()    {}
func (*ListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_046e6bf9c16e0523, []int{5}
}

func (m *ListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListResponse.Unmarshal(m, b)
}
func (m *ListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListResponse.Marshal(b, m, deterministic)
}
func (m *ListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResponse.Merge(m, src)
}
func (m *ListResponse) XXX_Size() int {
	return xxx_messageInfo_ListResponse.Size(m)
}
func (m *ListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListResponse proto.InternalMessageInfo

func (m *ListResponse) GetResults() []*AuditLogRes {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *ListResponse) GetPage() *query.PageInfo {
	if m != nil {
		return m.Page
	}
	return nil
}

type CreateResponse struct {
	Result               *AuditLog `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreateResponse) Reset()         { *m = CreateResponse{} }
func (m *CreateResponse) String() string { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()    {}
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_046e6bf9c16e0523, []int{6}
}

func (m *CreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateResponse.Unmarshal(m, b)
}
func (m *CreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateResponse.Marshal(b, m, deterministic)
}
func (m *CreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResponse.Merge(m, src)
}
func (m *CreateResponse) XXX_Size() int {
	return xxx_messageInfo_CreateResponse.Size(m)
}
func (m *CreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResponse proto.InternalMessageInfo

func (m *CreateResponse) GetResult() *AuditLog {
	if m != nil {
		return m.Result
	}
	return nil
}

func init() {
	proto.RegisterEnum("service.SubjectType", SubjectType_name, SubjectType_value)
	proto.RegisterType((*AuditLog)(nil), "service.AuditLog")
	proto.RegisterType((*AuditLogRes)(nil), "service.AuditLogRes")
	proto.RegisterType((*GetRequest)(nil), "service.GetRequest")
	proto.RegisterType((*DownloadRequest)(nil), "service.DownloadRequest")
	proto.RegisterType((*CreateRequest)(nil), "service.CreateRequest")
	proto.RegisterType((*ListResponse)(nil), "service.ListResponse")
	proto.RegisterType((*CreateResponse)(nil), "service.CreateResponse")
}

func init() {
	proto.RegisterFile("github.com/Infoblox-CTO/ngp.app.audit.logging/pkg/pb/auditlog.proto", fileDescriptor_046e6bf9c16e0523)
}

var fileDescriptor_046e6bf9c16e0523 = []byte{
	// 1356 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x97, 0xcb, 0x72, 0xdb, 0x36,
	0x17, 0xc7, 0x4d, 0xd9, 0xd6, 0x05, 0xba, 0x44, 0x86, 0x6f, 0xb4, 0x92, 0x7c, 0x51, 0x94, 0xaf,
	0x33, 0x6a, 0x1a, 0x93, 0x8e, 0xda, 0x99, 0x4c, 0x9c, 0x74, 0x21, 0xdb, 0x93, 0x8c, 0xd2, 0x5c,
	0x3a, 0xb4, 0x93, 0x45, 0x36, 0x1a, 0x88, 0x84, 0x69, 0x26, 0x14, 0x01, 0x03, 0xa0, 0x13, 0x75,
	0xd9, 0x55, 0xd7, 0xed, 0x5b, 0xf4, 0x0d, 0x9c, 0x99, 0x2e, 0xbb, 0xe9, 0xb6, 0x8b, 0x3e, 0x40,
	0xdb, 0x97, 0xe8, 0xaa, 0x03, 0x80, 0x54, 0x44, 0x29, 0x71, 0x3c, 0x99, 0x4e, 0xa7, 0x1b, 0x8f,
	0xf8, 0xc7, 0x1f, 0xe7, 0x1c, 0x1c, 0xe0, 0x07, 0x93, 0x60, 0xd7, 0x0f, 0xc4, 0x51, 0x3c, 0xb0,
	0x5c, 0x32, 0xb4, 0x7b, 0xd1, 0x21, 0x19, 0x84, 0xe4, 0xf5, 0xe6, 0xee, 0xc1, 0x13, 0x3b, 0xf2,
	0xa9, 0x85, 0x28, 0xb5, 0x50, 0xec, 0x05, 0xc2, 0x0a, 0x89, 0xef, 0x07, 0x91, 0x6f, 0xd3, 0x97,
	0xbe, 0x4d, 0x07, 0xb6, 0x12, 0x43, 0xe2, 0x5b, 0x94, 0x11, 0x41, 0x60, 0x81, 0x63, 0x76, 0x12,
	0xb8, 0xb8, 0x71, 0xc9, 0x27, 0xc4, 0x0f, 0xb1, 0x8d, 0x68, 0x60, 0xa3, 0x28, 0x22, 0x02, 0x89,
	0x80, 0x44, 0x5c, 0xdb, 0x1a, 0xdd, 0x89, 0x5c, 0x38, 0x3a, 0x21, 0x23, 0xca, 0xc8, 0xeb, 0x91,
	0xad, 0x06, 0xdd, 0x4d, 0x1f, 0x47, 0x9b, 0x27, 0x28, 0x0c, 0x3c, 0x24, 0xb0, 0x3d, 0xf3, 0x23,
	0x09, 0x71, 0x63, 0xc2, 0xcc, 0x5f, 0x21, 0xdf, 0xc7, 0xcc, 0x26, 0x54, 0x25, 0x79, 0x47, 0xc2,
	0x07, 0x13, 0x09, 0x83, 0x64, 0x71, 0x84, 0xe2, 0xc8, 0x46, 0x22, 0x44, 0x7c, 0x13, 0x51, 0xba,
	0x29, 0x08, 0x09, 0x5f, 0x06, 0xc2, 0x3e, 0x8e, 0x31, 0x1b, 0xd9, 0x2e, 0x09, 0x43, 0xec, 0xca,
	0x10, 0x7d, 0x42, 0x31, 0x43, 0x82, 0xb0, 0x34, 0xd6, 0x95, 0x64, 0x69, 0xea, 0x69, 0x10, 0x1f,
	0xda, 0x22, 0x18, 0x62, 0x2e, 0xd0, 0x90, 0x26, 0x86, 0xdb, 0xef, 0x4b, 0x36, 0x51, 0xb2, 0x4f,
	0xd8, 0xd0, 0x16, 0x23, 0x8a, 0xb9, 0xfe, 0x9b, 0x4c, 0xdd, 0x3e, 0xef, 0xd4, 0x74, 0xa9, 0xf2,
	0x21, 0x99, 0x7b, 0x70, 0x8e, 0xb9, 0x7a, 0xb9, 0x6a, 0x89, 0x6f, 0x5b, 0x9c, 0xc6, 0x52, 0x72,
	0x3f, 0xdb, 0xe7, 0xd6, 0x4f, 0x05, 0x50, 0xec, 0xca, 0x4d, 0x7e, 0x48, 0x7c, 0x58, 0x03, 0xb9,
	0xc0, 0x33, 0x8d, 0xa6, 0xd1, 0x5e, 0x70, 0x72, 0x81, 0x07, 0x6f, 0x03, 0xe0, 0x32, 0x8c, 0x04,
	0xf6, 0xfa, 0x48, 0x98, 0xb9, 0xa6, 0xd1, 0x2e, 0x77, 0x1a, 0x96, 0xee, 0x8f, 0x95, 0xf6, 0xc7,
	0x3a, 0x48, 0xfb, 0xe3, 0x94, 0x12, 0x77, 0x57, 0xc0, 0x2b, 0x20, 0x8f, 0x54, 0x7f, 0xcd, 0xf9,
	0xa6, 0xd1, 0x2e, 0xed, 0x14, 0xfe, 0xda, 0x59, 0x60, 0xb9, 0xba, 0xe1, 0x24, 0xb2, 0x34, 0x30,
	0xcc, 0xe3, 0x50, 0x98, 0x0b, 0x53, 0x06, 0x2d, 0xc3, 0xff, 0x81, 0x3c, 0xa2, 0xb4, 0x1f, 0x78,
	0xe6, 0x62, 0xd6, 0xb0, 0x88, 0x28, 0xed, 0x79, 0xf0, 0x0a, 0x28, 0x33, 0xcc, 0x49, 0xcc, 0x5c,
	0x2c, 0x4d, 0x79, 0x69, 0x72, 0x40, 0x2a, 0xf5, 0x3c, 0x78, 0x03, 0x54, 0xc7, 0x06, 0xb9, 0x09,
	0x66, 0x21, 0x1b, 0xa7, 0x92, 0x8e, 0x1e, 0x8c, 0x28, 0x86, 0xff, 0x07, 0xa5, 0x98, 0x63, 0xd6,
	0x8f, 0xd0, 0x10, 0x9b, 0xc5, 0xac, 0xb3, 0x28, 0x47, 0x1e, 0xa3, 0x21, 0x86, 0x17, 0x41, 0xc9,
	0x0d, 0x03, 0x1c, 0x89, 0x7e, 0x40, 0xcd, 0x92, 0x4a, 0x59, 0xd4, 0x42, 0x8f, 0xc2, 0x6b, 0x13,
	0x09, 0x3d, 0xcc, 0x5d, 0x13, 0x28, 0xc3, 0x38, 0xcf, 0x1e, 0xe6, 0x2e, 0x34, 0x41, 0x61, 0x88,
	0x39, 0x47, 0x3e, 0x36, 0xcb, 0x6a, 0x38, 0x7d, 0x94, 0xdd, 0x8e, 0xa9, 0x97, 0x76, 0xbb, 0xf2,
	0xe1, 0x6e, 0x27, 0xee, 0xae, 0x80, 0x97, 0x01, 0x60, 0xf8, 0x38, 0xc6, 0x5c, 0xc8, 0x56, 0x54,
	0x55, 0xdc, 0x52, 0xa2, 0xf4, 0x3c, 0x59, 0x18, 0x3e, 0x91, 0x45, 0x9f, 0x60, 0xc6, 0xe5, 0x9e,
	0xd4, 0x74, 0x61, 0x4a, 0x7c, 0xa6, 0x35, 0x78, 0x17, 0xd4, 0xb4, 0x69, 0x88, 0x05, 0xf2, 0x90,
	0x40, 0xe6, 0x05, 0x55, 0xc2, 0xaa, 0xa5, 0x0e, 0xa1, 0x3e, 0xc6, 0x0f, 0xf6, 0x9f, 0x3c, 0x7e,
	0x86, 0xc2, 0x18, 0x3b, 0x3a, 0xe2, 0xa3, 0xc4, 0x0b, 0x6f, 0x81, 0x0a, 0x8f, 0x07, 0x2f, 0xb0,
	0x2b, 0x74, 0xaf, 0xeb, 0x4d, 0xa3, 0x5d, 0xeb, 0xac, 0x58, 0xc9, 0x85, 0x61, 0xed, 0xeb, 0x41,
	0xd9, 0x6a, 0xa7, 0xcc, 0xdf, 0x3e, 0xc0, 0xab, 0xa0, 0xc2, 0x31, 0x97, 0x15, 0xe8, 0x89, 0x4b,
	0xaa, 0xb4, 0x72, 0xa2, 0x29, 0xcb, 0x27, 0xa0, 0x96, 0xc6, 0xf6, 0x19, 0x89, 0x29, 0x37, 0x61,
	0x73, 0xbe, 0x5d, 0x72, 0xaa, 0x89, 0x7a, 0x5f, 0x89, 0xb2, 0x09, 0x69, 0xa4, 0xc0, 0x33, 0x97,
	0x75, 0x13, 0x12, 0xa5, 0xe7, 0xc1, 0x0d, 0x50, 0x3c, 0x12, 0x82, 0xf6, 0x63, 0x16, 0x9a, 0x2b,
	0xba, 0xf3, 0xf2, 0xf9, 0x29, 0x0b, 0xe5, 0x51, 0x52, 0x43, 0x43, 0x2c, 0x8e, 0x88, 0x67, 0xae,
	0xea, 0xa3, 0x24, 0xa5, 0x47, 0x4a, 0x81, 0x2d, 0x50, 0x55, 0x06, 0x86, 0x8f, 0xfb, 0x03, 0xe2,
	0x8d, 0xcc, 0x35, 0x5d, 0xa5, 0x14, 0x1d, 0x7c, 0xbc, 0x43, 0xbc, 0x91, 0x3c, 0x1a, 0xca, 0xe3,
	0x12, 0x0f, 0x9b, 0xeb, 0x4d, 0xa3, 0xbd, 0xe8, 0xa8, 0x84, 0xbb, 0xc4, 0x93, 0xa7, 0xab, 0x96,
	0x04, 0xe0, 0x54, 0x47, 0x30, 0xf5, 0x16, 0xe8, 0x08, 0x9c, 0xaa, 0x10, 0x97, 0x01, 0x40, 0xae,
	0x4b, 0xe2, 0x48, 0x6d, 0xe3, 0x86, 0x5e, 0x41, 0xa2, 0xf4, 0xbc, 0x6d, 0xf8, 0xe6, 0x74, 0xa3,
	0x56, 0x34, 0x1a, 0x40, 0xdd, 0xca, 0xfd, 0x90, 0xf8, 0xbc, 0xf5, 0x7b, 0x1e, 0x94, 0x53, 0x7e,
	0x1d, 0xcc, 0xff, 0x49, 0x84, 0xd7, 0xb2, 0x08, 0x8f, 0xc9, 0x5d, 0xcb, 0x92, 0x3b, 0x06, 0x76,
	0x35, 0x0b, 0xec, 0xb9, 0x39, 0xbd, 0xf6, 0x4e, 0x4e, 0xa7, 0xf0, 0xbc, 0x38, 0x83, 0xe7, 0xbf,
	0x44, 0x65, 0x16, 0xad, 0xca, 0x07, 0xd1, 0xaa, 0xbe, 0x03, 0xad, 0x7b, 0x33, 0x68, 0xd5, 0xce,
	0x40, 0x6b, 0xa7, 0xf8, 0xcb, 0xe9, 0xc6, 0x02, 0xc8, 0xd5, 0xf3, 0x1f, 0x82, 0xec, 0xc2, 0xc7,
	0x42, 0x56, 0x9f, 0x85, 0xcc, 0x9e, 0x81, 0x6c, 0x49, 0x42, 0x36, 0x59, 0xcc, 0x59, 0xb8, 0xc1,
	0xb3, 0x70, 0x5b, 0x3e, 0x13, 0xb7, 0x95, 0x19, 0xdc, 0x6e, 0x4c, 0xe3, 0xa6, 0x88, 0x9c, 0x28,
	0xe5, 0xfd, 0xe0, 0xad, 0x4d, 0x81, 0x67, 0xcd, 0x80, 0xb7, 0x3e, 0x15, 0x2b, 0x83, 0xe0, 0xf6,
	0xca, 0x9b, 0xd3, 0x8d, 0x7a, 0x96, 0xb1, 0xa6, 0xd1, 0xfa, 0xcd, 0x00, 0xe0, 0x3e, 0x16, 0x8e,
	0xde, 0x76, 0x68, 0x83, 0xfc, 0x61, 0x10, 0x0a, 0xcc, 0x14, 0x68, 0xe5, 0xce, 0xba, 0x95, 0xfe,
	0x43, 0xb6, 0x10, 0x0d, 0xac, 0x7b, 0x6a, 0x2c, 0x88, 0x7c, 0x27, 0xb1, 0xc1, 0x2d, 0x50, 0x24,
	0xcc, 0xc3, 0xac, 0x3f, 0x18, 0x25, 0x0c, 0xae, 0x66, 0xa7, 0xec, 0x13, 0x26, 0xe4, 0x84, 0x82,
	0xb2, 0xed, 0x8c, 0xe0, 0x17, 0x32, 0x05, 0x0e, 0x3d, 0xae, 0xe0, 0x2b, 0x77, 0x2e, 0x4d, 0xa7,
	0xc0, 0xa1, 0xb7, 0x8f, 0x93, 0x77, 0x18, 0x27, 0xf1, 0xc2, 0x2d, 0x90, 0xa7, 0x48, 0xbe, 0xbf,
	0x29, 0x34, 0xcb, 0x1d, 0x33, 0x3b, 0xeb, 0x6b, 0x39, 0x86, 0xf4, 0x0c, 0xed, 0x6b, 0xfd, 0x68,
	0x80, 0x0b, 0x7b, 0xe4, 0x55, 0x14, 0x12, 0xe4, 0xfd, 0xd7, 0x97, 0xd7, 0xba, 0x0b, 0xaa, 0xbb,
	0xea, 0x7a, 0x4a, 0x2b, 0xfd, 0x0c, 0x14, 0x28, 0x1a, 0xc9, 0xda, 0x93, 0x52, 0x97, 0xc6, 0x2c,
	0x8c, 0x2f, 0xc5, 0xd4, 0xd1, 0x7a, 0x01, 0x2a, 0x0f, 0x03, 0x2e, 0xe4, 0x56, 0x93, 0x88, 0xcb,
	0xa3, 0x51, 0xd0, 0x37, 0x17, 0x37, 0x8d, 0xe6, 0x7c, 0xbb, 0x3c, 0x01, 0xd2, 0xc4, 0x8d, 0xea,
	0xa4, 0x26, 0x78, 0x1d, 0x2c, 0x50, 0x79, 0x41, 0xe8, 0x15, 0xae, 0xcd, 0xb4, 0x16, 0xcb, 0xd7,
	0x6a, 0x47, 0x79, 0x5a, 0x77, 0x40, 0x2d, 0xad, 0x34, 0xc9, 0xf6, 0xe9, 0xf8, 0xd6, 0x7c, 0x6f,
	0xa5, 0x89, 0xe1, 0xfa, 0x97, 0xa0, 0x3c, 0x41, 0x32, 0x2c, 0x83, 0xc2, 0x1e, 0x3e, 0x44, 0x71,
	0x28, 0xea, 0x73, 0xb0, 0x08, 0x16, 0x9e, 0x72, 0xcc, 0xea, 0x86, 0x94, 0xf7, 0x75, 0x84, 0x7a,
	0x0e, 0x02, 0x90, 0xdf, 0xc3, 0xea, 0xf7, 0x7c, 0xe7, 0x4f, 0x03, 0x54, 0xd2, 0x98, 0x72, 0x8f,
	0xe1, 0x6e, 0x5a, 0xcc, 0xf8, 0x45, 0x6f, 0x6d, 0x9c, 0x3c, 0xd3, 0xcf, 0xc6, 0xfa, 0x8c, 0xae,
	0xab, 0x6f, 0xcd, 0xc1, 0x07, 0xa0, 0x2a, 0xbb, 0x97, 0x86, 0xe0, 0x70, 0x79, 0xec, 0x7d, 0x4b,
	0x46, 0x63, 0x75, 0x2c, 0x4e, 0xb6, 0xba, 0x55, 0xfd, 0xf6, 0xd7, 0x3f, 0x7e, 0xc8, 0x15, 0xe0,
	0xa2, 0x2d, 0x81, 0x82, 0x77, 0x41, 0xe9, 0x1e, 0x16, 0xee, 0x91, 0x8a, 0x63, 0x8e, 0xa7, 0x4c,
	0x9d, 0xc3, 0xc6, 0x6c, 0x8b, 0x5a, 0x73, 0x5b, 0x46, 0x23, 0xff, 0xe6, 0x74, 0x23, 0x57, 0x34,
	0x76, 0x7e, 0x36, 0xbe, 0xef, 0x7e, 0x67, 0xc0, 0x15, 0x50, 0xcd, 0x7c, 0xba, 0x74, 0xe6, 0x6f,
	0x5a, 0x5b, 0xad, 0x25, 0xfd, 0x69, 0x92, 0x7c, 0xbe, 0xd8, 0x27, 0x37, 0xed, 0xeb, 0x39, 0x23,
	0xd7, 0xa9, 0x23, 0x4a, 0xc3, 0xc0, 0x55, 0x0c, 0xd8, 0x2f, 0x38, 0x89, 0xb6, 0x67, 0x94, 0xe7,
	0xd7, 0xc0, 0x55, 0x00, 0xba, 0x34, 0xf8, 0x0a, 0x8f, 0xba, 0xb1, 0x38, 0x82, 0xcb, 0xc5, 0x5c,
	0xa3, 0x2a, 0x7f, 0x11, 0x16, 0x7c, 0xa3, 0x7c, 0xcd, 0xdc, 0xa0, 0x0e, 0x6a, 0x19, 0xd3, 0xdc,
	0xf3, 0x5b, 0x1f, 0xf3, 0x81, 0x75, 0x87, 0x0e, 0x06, 0x79, 0xf5, 0x6f, 0xf8, 0xf3, 0xbf, 0x03,
	0x00, 0x00, 0xff, 0xff, 0x1e, 0xc4, 0x04, 0x7b, 0xa2, 0x0d, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuditLoggingClient is the client API for AuditLogging service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuditLoggingClient interface {
	CreateAuditLog(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
	// List Audit logs.
	//
	//Use this method to retrieve list of Audit logging objects.
	ListAuditLogs(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*ListResponse, error)
	FetchLogs(ctx context.Context, in *DownloadRequest, opts ...grpc.CallOption) (AuditLogging_FetchLogsClient, error)
}

type auditLoggingClient struct {
	cc *grpc.ClientConn
}

func NewAuditLoggingClient(cc *grpc.ClientConn) AuditLoggingClient {
	return &auditLoggingClient{cc}
}

func (c *auditLoggingClient) CreateAuditLog(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := c.cc.Invoke(ctx, "/service.AuditLogging/CreateAuditLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *auditLoggingClient) ListAuditLogs(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := c.cc.Invoke(ctx, "/service.AuditLogging/ListAuditLogs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *auditLoggingClient) FetchLogs(ctx context.Context, in *DownloadRequest, opts ...grpc.CallOption) (AuditLogging_FetchLogsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_AuditLogging_serviceDesc.Streams[0], "/service.AuditLogging/FetchLogs", opts...)
	if err != nil {
		return nil, err
	}
	x := &auditLoggingFetchLogsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type AuditLogging_FetchLogsClient interface {
	Recv() (*AuditLog, error)
	grpc.ClientStream
}

type auditLoggingFetchLogsClient struct {
	grpc.ClientStream
}

func (x *auditLoggingFetchLogsClient) Recv() (*AuditLog, error) {
	m := new(AuditLog)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// AuditLoggingServer is the server API for AuditLogging service.
type AuditLoggingServer interface {
	CreateAuditLog(context.Context, *CreateRequest) (*CreateResponse, error)
	// List Audit logs.
	//
	//Use this method to retrieve list of Audit logging objects.
	ListAuditLogs(context.Context, *GetRequest) (*ListResponse, error)
	FetchLogs(*DownloadRequest, AuditLogging_FetchLogsServer) error
}

func RegisterAuditLoggingServer(s *grpc.Server, srv AuditLoggingServer) {
	s.RegisterService(&_AuditLogging_serviceDesc, srv)
}

func _AuditLogging_CreateAuditLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuditLoggingServer).CreateAuditLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AuditLogging/CreateAuditLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuditLoggingServer).CreateAuditLog(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuditLogging_ListAuditLogs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuditLoggingServer).ListAuditLogs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AuditLogging/ListAuditLogs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuditLoggingServer).ListAuditLogs(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuditLogging_FetchLogs_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DownloadRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AuditLoggingServer).FetchLogs(m, &auditLoggingFetchLogsServer{stream})
}

type AuditLogging_FetchLogsServer interface {
	Send(*AuditLog) error
	grpc.ServerStream
}

type auditLoggingFetchLogsServer struct {
	grpc.ServerStream
}

func (x *auditLoggingFetchLogsServer) Send(m *AuditLog) error {
	return x.ServerStream.SendMsg(m)
}

var _AuditLogging_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.AuditLogging",
	HandlerType: (*AuditLoggingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAuditLog",
			Handler:    _AuditLogging_CreateAuditLog_Handler,
		},
		{
			MethodName: "ListAuditLogs",
			Handler:    _AuditLogging_ListAuditLogs_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "FetchLogs",
			Handler:       _AuditLogging_FetchLogs_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "github.com/Infoblox-CTO/ngp.app.audit.logging/pkg/pb/auditlog.proto",
}
